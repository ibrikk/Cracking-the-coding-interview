TREES:

BST
A binary search tree is a binary tree in which every node fits a specific ordering property: all left
descendents <= n < all right descendents. This must be true for each node n. 

Complete Binary Trees
A complete binary tree is a binary tree in which every level of the tree is fully filled, except for perhaps the
last level. To the extent that the last level is filled, it is filled left to right.

Full Binary Trees
A full binary tree is a binary tree in which every node has either zero or two children. That is, no nodes have
only one child. 

Perfect Binary Trees
A perfect binary tree is one that is both full and complete. All leaf nodes will be at the same level, and this
level has the maximum number of nodes. 

Note that perfect trees are rare in interviews and in real life, as a perfect tree must have exactly 2^k - 1 nodes
(where k is the number of levels). In an interview, do not assume a binary tree is perfect. 

Heap
A min-heap is a complete binary tree (that is, totally filled other than the rightmost elements on the last
level) where each node is smaller than its children. The root, therefore, is the minimum element in the tree.

Tries
A trie is a variant of an n-ary tree in which characters are stored at each node. Each path down the tree may
represent a word. A node in a trie could have anywhere from 1 through ALPHABET _SIZE + 1 children (or, 0 through
ALPHABET _SIZE if a boolean flag is used instead of a * node). 